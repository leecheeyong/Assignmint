openapi: 3.0.4
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: https://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.12
externalDocs:
  description: Find out more about Swagger
  url: https://swagger.io

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Assignment:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        course:
          type: string
        dueDate:
          type: string
          format: date-time
        type:
          type: string
        notes:
          type: string
        completed:
          type: boolean
    StudyGoal:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        completed:
          type: boolean
    GroupPromise:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        teamMembers:
          type: array
          items:
            type: string
        deadline:
          type: string
          format: date-time
    DashboardSummary:
      type: object
      properties:
        assignmentCount:
          type: integer
        completedAssignments:
          type: integer
        upcomingAssignments:
          type: integer
        goalsPending:
          type: integer
        goalStreak:
          type: integer
        groupTasks:
          type: integer
        groupPromiseTeams:
          type: integer

paths:
  /auth:
    post:
      summary: Sign up and receive JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: JWT Token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string

  /assignments:
    get:
      security: [BearerAuth: []]
      summary: Get all assignments
      responses:
        '200':
          description: A list of assignments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assignment'
    post:
      security: [BearerAuth: []]
      summary: Create an assignment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
      responses:
        '201':
          description: Created assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
  /assignments?id={id}:
    put:
      security: [BearerAuth: []]
      summary: Update an assignment
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Assignment'
      responses:
        '200':
          description: Updated assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assignment'
    delete:
      security: [BearerAuth: []]
      summary: Delete an assignment
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Assignment deleted

  /study-goals:
    get:
      security: [BearerAuth: []]
      summary: Get all study goals
      responses:
        '200':
          description: A list of study goals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudyGoal'
    post:
      security: [BearerAuth: []]
      summary: Create a study goal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyGoal'
      responses:
        '201':
          description: Created study goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyGoal'
  /study-goals?id={id}:
    put:
      security: [BearerAuth: []]
      summary: Update a study goal
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudyGoal'
      responses:
        '200':
          description: Updated study goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudyGoal'

  /group-promises:
    get:
      security: [BearerAuth: []]
      summary: Get all group promises
      responses:
        '200':
          description: A list of group promises
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupPromise'
    post:
      security: [BearerAuth: []]
      summary: Create a group promise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPromise'
      responses:
        '201':
          description: Created group promise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPromise'

  /dashboard-summary:
    get:
      security: [BearerAuth: []]
      summary: Get user dashboard summary
      responses:
        '200':
          description: Summary metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardSummary'
